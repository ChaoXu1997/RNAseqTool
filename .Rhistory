datExpr <- datExpr0_func(datExpr)
power <- 6
nGenes <- ncol(datExpr)
net <- blockwiseModules_func(datExpr)
moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
datTraits <- datTrait
trait <- names(datTrait)[1]
MEs <- net$MEs
# Isolate weight from the clinical traits
dat = as.data.frame(datTraits[,trait]);
names(dat) = trait
# Add the weight to existing module eigengenes
MET = orderMEs(cbind(MEs, dat))
# Add the weight to existing module eigengenes
MET = orderMEs(cbind(MEs, dat))
dat
trait
trait <- names(datTrait)[2]
# Isolate weight from the clinical traits
dat = as.data.frame(datTraits[,trait]);
names(dat) = trait
dat
# Add the weight to existing module eigengenes
MET = orderMEs(cbind(MEs, dat))
MEs
MEs = moduleEigengenes(datExpr, moduleColors)$eigengenes
# Isolate weight from the clinical traits
dat = as.data.frame(datTraits[,trait]);
names(dat) = trait
# Add the weight to existing module eigengenes
MET = orderMEs(cbind(MEs, dat))
View(datTrait)
View(datExpr)
datTraits <- datTrait[1:135,]
trait <- names(datTrait)[2]
# Isolate weight from the clinical traits
dat = as.data.frame(datTraits[,trait]);
names(dat) = trait
# Add the weight to existing module eigengenes
MET = orderMEs(cbind(MEs, dat))
plotEigengeneNetworks(MET, "", marDendro = c(0,4,1,2),
marHeatmap = c(3,4,1,2), cex.lab = 0.8,
xLabelsAngle = 90)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
# Remove current favicon
golem::remove_favicon()
# Add a new one
golem::use_favicon(path = "www/hex-RNATool.png")
# Add a new one
golem::use_favicon(path = "README/hex-RNATool.png")
golem::run_dev()
# Add a new one
golem::use_favicon(path = "README/hex-RNATool.png")
?within
?favicon
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?dashboardBrand
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?ggbiplot
golem::run_dev()
?textInput
golem::run_dev()
golem::run_dev()
?textInput
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?textInput
golem::run_dev()
?switchInput
?ggbiplot
ï¼Ÿgeom_point()
>geom_point()
?geom_point()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?openxlsx::write.xlsx
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?openxlsx::write.xlsx
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?setBackgroundImage
?setBackgroundImage
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?image
?tags
?img
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?jumbotron
?jumbotron
golem::run_dev()
?infoBox
golem::run_dev()
golem::run_dev()
?blockQuote
?blockQuote
?blockQuote
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?area
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
layout <- c(
area(1, 1),
area(1, 3, 3),
area(3, 1, 3, 2)
)
library(ggplot2)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_bar(aes(gear)) + facet_wrap(~cyl)
layout <- c(
area(1, 1),
area(1, 3, 3),
area(3, 1, 3, 2)
)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?em
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?blockQuote
?blockQuote
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?carousel
?carousel
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
>?img
?img
?height
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?carousel
?carousel
golem::run_dev()
golem::run_dev()
golem::run_dev()
fluidRow(
column(
5,
#blockQuote("RNAseqTool:A Shiny App for Interactive RNAseq Analysis and Visualization", color = "indigo"),
fluidRow(
column(
12,
align = "center",
tags$p(tags$i("RNAseqTool: A Shiny App for Interactive RNAseq Analysis and Visualization"),
style="color:#95a5a6;font-style:italic;text-indent:0px"),
tags$img(
src = "www/favicon.png",
width = 103.7,
height = 120
)
)
),
fluidRow(
column(
9,
offset = 2,
tags$h5("RNAseqTool provides an interactive and user-friendly method for users to analyze RNAseq data,
which could be a great solution for RNAseq data analysis and visualization.
Here are some potential features that the Shiny App could include:"),
)
),
fluidRow(
column(
8,
offset = 2,
align = "left",
blockQuote(
tags$h6(
tags$ul(
tags$li(
"Interactive Visualization"
),
tags$li(
"Principal Component Analysis (PCA)"
),
tags$li(
"Differential Gene Expression Analysis"
),
tags$li(
"Gene Annotation & Functional analysis"
),
tags$li(
"Gene Trend Analysis"
),
tags$li(
"WGCNA Analysis"
),
tags$li(
"Data Export: PDF & XLSX"
),
tags$li(
"Continuous Development & Improvement"
)
)
)
, color = "teal")
)
)
),
column(
7,
carousel(
id = "mycarousel",
width = 12,
indicators = TRUE,
carouselItem(
caption = "Item 1",
align = "center",
tags$img(src = "www/favicon.png",width="500",height="600")
),
carouselItem(
caption = "Item 2",
tags$img(src = "www/favicon.png",width="500",height="600")
)
)
)
)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?carousel
golem::run_dev()
golem::run_dev()
?img
?img
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
fluidRow(
column(
5,
tags$br(),
tags$br(),
tags$br(),
fluidRow(
column(
12,
align = "center",
tags$p(tags$i("RNAseqTool: A Shiny App for Interactive RNAseq Analysis and Visualization"),
style="color:#95a5a6;font-style:italic;text-indent:0px")%>%
animateAppend("float",speed = "fast"),
tags$img(
src = "www/favicon.png",
width = 103.7*2,
height = 120*2
)
)
),
fluidRow(
column(
9,
offset = 2,
tags$h5("RNAseqTool provides an interactive and user-friendly method for users to analyze RNAseq data,
which could be a great solution for RNAseq data analysis and visualization.
Here are some potential features that the Shiny App could include:"),
)
),
fluidRow(
column(
8,
offset = 2,
align = "left",
blockQuote(
tags$h6(
tags$ul(
tags$li(
"Interactive Visualization"
),
tags$li(
"Principal Component Analysis (PCA)"
),
tags$li(
"Differential Gene Expression Analysis"
),
tags$li(
"Gene Annotation & Functional analysis"
),
tags$li(
"Gene Trend Analysis"
),
tags$li(
"WGCNA Analysis"
),
tags$li(
"Data Export: PDF & XLSX"
),
tags$li(
"Continuous Development & Improvement"
)
)
)
, color = "teal")
)
)
),
column(
7,
tags$br(),
carousel(
id = "mycarousel",
width = 12,
indicators = TRUE,
carouselItem(
caption = "Item 1",
align = "center",
tags$img(src = "www/1.jpg",width="600",height="500")
),
carouselItem(
caption = "Item 2",
align = "center",
tags$img(src = "www/favicon.png",width="500",height="600")
)
)
)
)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?carouselItem
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
gc()
golem::run_dev()
dev.off()
dev.off()
golem::run_dev()
golem::run_dev()
# carousel
carouseDat <- openxlsx::read.xlsx("data/carousel.xlsx")
View(carouseDat)
carouseDat <- openxlsx::read.xlsx("data/carousel.xlsx") %>%
dplyr::arrange(order)
library(magrittr)
# carousel
carouseDat <- openxlsx::read.xlsx("data/carousel.xlsx") %>%
dplyr::arrange(order)
View(carouseDat)
golem::run_dev()
golem::run_dev()
?enricher
?enrichGO
?prcomp
species <- as.data.frame(msigdbr::msigdbr_species())[,1]
db_collections <- openxlsx::read.xlsx("./data/db_collections.xlsx")
View(carouseDat)
View(db_collections)
species
golem::run_dev()
usethis::use_data("./data/")
remove.packages("RNAexprApp")
usethis::use_data("./data/")
# add raw data
usethis::use_data_raw("raw_data")
golem::run_dev()
golem::run_dev()
golem::run_dev()
